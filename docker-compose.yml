version: '3'

services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    env_file:
      - .env
    networks:
      - pub-sub-network
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 20s
      timeout: 30s
      retries: 5

  publisher:
    build:
      context: .
      dockerfile: ./app/Dockerfile    
    container_name: publisher
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - pub-sub-network
    env_file:
        - .env
    command: bash -c "uvicorn app.main:app --host 0.0.0.0 --port 8080 --lifespan=on --use-colors --loop uvloop --http httptools --reload --log-level debug"
    volumes:
      - .:/app
    ports:
      - "8000:8080"
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
  
  consumer:
    container_name: consumer
    build:
      context: .
      dockerfile: ./consumer/Dockerfile
    networks:
      - pub-sub-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
    restart: on-failure
    volumes:
      - .:/consumer
    env_file:
      - .env
    command: bash -c "PYTHONPATH=. python ./consumer/main.py"
networks:
  pub-sub-network:
    driver: bridge
volumes:
  rabbitmq_data:
  rabbitmq_log:
